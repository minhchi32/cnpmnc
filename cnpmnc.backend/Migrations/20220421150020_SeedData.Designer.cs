// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cnpmnc.backend.Data;

#nullable disable

namespace cnpmnc.backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220421150020_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("cnpmnc.backend.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.Property<int?>("ActualNumberOfHoursInClass")
                        .HasColumnType("int");

                    b.Property<string>("IdCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiteracyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfBreaks")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfHoursInClass")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfTeachingSessions")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LiteracyId");

                    b.ToTable("Accounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountType = 1,
                            IdCard = "1",
                            IsDeleted = false,
                            LiteracyId = 1,
                            Name = "1",
                            Password = "1",
                            PhoneNumber = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            AccountType = 2,
                            ActualNumberOfHoursInClass = 15,
                            IdCard = "1",
                            IsDeleted = false,
                            LiteracyId = 2,
                            Name = "Nguyễn Van A",
                            NumberOfBreaks = 0,
                            NumberOfHoursInClass = 15,
                            NumberOfTeachingSessions = 15,
                            Password = "1",
                            PhoneNumber = 1,
                            Username = "gv1"
                        },
                        new
                        {
                            Id = 3,
                            AccountType = 2,
                            ActualNumberOfHoursInClass = 15,
                            IdCard = "1",
                            IsDeleted = false,
                            LiteracyId = 3,
                            Name = "Nguyễn Văn B",
                            NumberOfBreaks = 0,
                            NumberOfHoursInClass = 15,
                            NumberOfTeachingSessions = 15,
                            Password = "1",
                            PhoneNumber = 1,
                            Username = "gv2"
                        },
                        new
                        {
                            Id = 4,
                            AccountType = 2,
                            ActualNumberOfHoursInClass = 15,
                            IdCard = "1",
                            IsDeleted = false,
                            LiteracyId = 3,
                            Name = "Nguyễn Văn C",
                            NumberOfBreaks = 0,
                            NumberOfHoursInClass = 15,
                            NumberOfTeachingSessions = 15,
                            Password = "1",
                            PhoneNumber = 1,
                            Username = "gv3"
                        });
                });

            modelBuilder.Entity("cnpmnc.backend.Models.Certificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Certificates", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            ExpiryDate = new DateTime(2025, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1546),
                            IssueDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1538),
                            Name = "ReactJS"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            ExpiryDate = new DateTime(2025, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1551),
                            IssueDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1550),
                            Name = "NodeJS"
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            ExpiryDate = new DateTime(2025, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1553),
                            IssueDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1552),
                            Name = "ASP.NET"
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4,
                            ExpiryDate = new DateTime(2025, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1554),
                            IssueDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1554),
                            Name = "C#"
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 5,
                            ExpiryDate = new DateTime(2025, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1556),
                            IssueDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1555),
                            Name = "JavaScript"
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 6,
                            ExpiryDate = new DateTime(2025, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1558),
                            IssueDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1557),
                            Name = "Python"
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 7,
                            ExpiryDate = new DateTime(2025, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1559),
                            IssueDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1559),
                            Name = "React Native"
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 8,
                            ExpiryDate = new DateTime(2025, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1561),
                            IssueDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1560),
                            Name = "Golang"
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 9,
                            ExpiryDate = new DateTime(2025, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1562),
                            IssueDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1562),
                            Name = "VueJS"
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 10,
                            ExpiryDate = new DateTime(2025, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1564),
                            IssueDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1563),
                            Name = "Angular"
                        },
                        new
                        {
                            Id = 11,
                            CourseId = 11,
                            ExpiryDate = new DateTime(2025, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1566),
                            IssueDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1565),
                            Name = "Flutter"
                        },
                        new
                        {
                            Id = 12,
                            CourseId = 12,
                            ExpiryDate = new DateTime(2025, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1567),
                            IssueDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1567),
                            Name = "Java"
                        },
                        new
                        {
                            Id = 13,
                            CourseId = 13,
                            ExpiryDate = new DateTime(2025, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1569),
                            IssueDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1568),
                            Name = "C++"
                        },
                        new
                        {
                            Id = 14,
                            CourseId = 14,
                            ExpiryDate = new DateTime(2025, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1570),
                            IssueDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1570),
                            Name = "C"
                        },
                        new
                        {
                            Id = 15,
                            CourseId = 15,
                            ExpiryDate = new DateTime(2026, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1572),
                            IssueDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1571),
                            Name = "C#"
                        });
                });

            modelBuilder.Entity("cnpmnc.backend.Models.Classroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.ToTable("Classrooms", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "B21",
                            Note = "1",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            Name = "B22",
                            Note = "1",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            Name = "B24",
                            Note = "1",
                            Status = true
                        });
                });

            modelBuilder.Entity("cnpmnc.backend.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudyConditions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tuition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Courses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "1",
                            Detail = "1",
                            EndDate = new DateTime(2022, 2, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1612),
                            IsDeleted = false,
                            Name = "ReactJS",
                            StartDate = new DateTime(2021, 12, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1610),
                            StudyConditions = "1",
                            Tuition = 4000000
                        },
                        new
                        {
                            Id = 2,
                            Content = "1",
                            Detail = "1",
                            EndDate = new DateTime(2022, 11, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1615),
                            IsDeleted = false,
                            Name = "NodeJS",
                            StartDate = new DateTime(2022, 5, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1614),
                            StudyConditions = "1",
                            Tuition = 4500000
                        },
                        new
                        {
                            Id = 3,
                            Content = "1",
                            Detail = "1",
                            EndDate = new DateTime(2021, 10, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1617),
                            IsDeleted = false,
                            Name = "ASP.NET",
                            StartDate = new DateTime(2021, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1617),
                            StudyConditions = "1",
                            Tuition = 3000000
                        },
                        new
                        {
                            Id = 4,
                            Content = "1",
                            Detail = "1",
                            EndDate = new DateTime(2022, 7, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1619),
                            IsDeleted = false,
                            Name = "C#",
                            StartDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1619),
                            StudyConditions = "1",
                            Tuition = 2000000
                        },
                        new
                        {
                            Id = 5,
                            Content = "1",
                            Detail = "1",
                            EndDate = new DateTime(2022, 10, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1622),
                            IsDeleted = false,
                            Name = "JavaScript",
                            StartDate = new DateTime(2022, 7, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1621),
                            StudyConditions = "1",
                            Tuition = 3500000
                        },
                        new
                        {
                            Id = 6,
                            Content = "1",
                            Detail = "1",
                            EndDate = new DateTime(2022, 12, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1624),
                            IsDeleted = false,
                            Name = "Python",
                            StartDate = new DateTime(2022, 9, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1623),
                            StudyConditions = "1",
                            Tuition = 2500000
                        },
                        new
                        {
                            Id = 7,
                            Content = "1",
                            Detail = "1",
                            EndDate = new DateTime(2023, 1, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1626),
                            IsDeleted = false,
                            Name = "React Native",
                            StartDate = new DateTime(2022, 10, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1625),
                            StudyConditions = "1",
                            Tuition = 5500000
                        },
                        new
                        {
                            Id = 8,
                            Content = "1",
                            Detail = "1",
                            EndDate = new DateTime(2022, 11, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1628),
                            IsDeleted = false,
                            Name = "Golang",
                            StartDate = new DateTime(2022, 8, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1627),
                            StudyConditions = "1",
                            Tuition = 5500000
                        },
                        new
                        {
                            Id = 9,
                            Content = "1",
                            Detail = "1",
                            EndDate = new DateTime(2022, 8, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1630),
                            IsDeleted = false,
                            Name = "VueJS",
                            StartDate = new DateTime(2022, 5, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1629),
                            StudyConditions = "1",
                            Tuition = 5000000
                        },
                        new
                        {
                            Id = 10,
                            Content = "1",
                            Detail = "1",
                            EndDate = new DateTime(2022, 7, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1631),
                            IsDeleted = false,
                            Name = "Angular",
                            StartDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1631),
                            StudyConditions = "1",
                            Tuition = 6000000
                        },
                        new
                        {
                            Id = 11,
                            Content = "1",
                            Detail = "1",
                            EndDate = new DateTime(2022, 7, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1634),
                            IsDeleted = false,
                            Name = "Flutter",
                            StartDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1633),
                            StudyConditions = "1",
                            Tuition = 6000000
                        },
                        new
                        {
                            Id = 12,
                            Content = "1",
                            Detail = "1",
                            EndDate = new DateTime(2022, 1, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1636),
                            IsDeleted = false,
                            Name = "Java",
                            StartDate = new DateTime(2021, 11, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1635),
                            StudyConditions = "1",
                            Tuition = 1500000
                        },
                        new
                        {
                            Id = 13,
                            Content = "1",
                            Detail = "1",
                            EndDate = new DateTime(2022, 1, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1638),
                            IsDeleted = false,
                            Name = "C++",
                            StartDate = new DateTime(2021, 10, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1637),
                            StudyConditions = "1",
                            Tuition = 1500000
                        },
                        new
                        {
                            Id = 14,
                            Content = "1",
                            Detail = "1",
                            EndDate = new DateTime(2021, 12, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1640),
                            IsDeleted = false,
                            Name = "C",
                            StartDate = new DateTime(2021, 9, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1639),
                            StudyConditions = "1",
                            Tuition = 1000000
                        },
                        new
                        {
                            Id = 15,
                            Content = "1",
                            Detail = "1",
                            EndDate = new DateTime(2022, 8, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1642),
                            IsDeleted = false,
                            Name = "C#",
                            StartDate = new DateTime(2022, 4, 21, 22, 0, 19, 929, DateTimeKind.Local).AddTicks(1642),
                            StudyConditions = "1",
                            Tuition = 5500000
                        });
                });

            modelBuilder.Entity("cnpmnc.backend.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfSessions")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Grades", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Name = "ReactJS - 1",
                            NumberOfSessions = 10,
                            TeacherId = 2,
                            Total = 0
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            Name = "ReactJS - 2",
                            NumberOfSessions = 10,
                            TeacherId = 2,
                            Total = 0
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 2,
                            Name = "NodeJS - 1",
                            NumberOfSessions = 10,
                            TeacherId = 3,
                            Total = 0
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 2,
                            Name = "NodeJS - 2",
                            NumberOfSessions = 10,
                            TeacherId = 3,
                            Total = 0
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 3,
                            Name = "ASP.NET - 1",
                            NumberOfSessions = 10,
                            TeacherId = 4,
                            Total = 0
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 3,
                            Name = "ASP.NET - 2",
                            NumberOfSessions = 10,
                            TeacherId = 4,
                            Total = 0
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 4,
                            Name = "C# - 1",
                            NumberOfSessions = 10,
                            TeacherId = 2,
                            Total = 0
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 4,
                            Name = "C# - 2",
                            NumberOfSessions = 10,
                            TeacherId = 2,
                            Total = 0
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 5,
                            Name = "JavaScript - 1",
                            NumberOfSessions = 10,
                            TeacherId = 3,
                            Total = 0
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 5,
                            Name = "JavaScript - 2",
                            NumberOfSessions = 10,
                            TeacherId = 3,
                            Total = 0
                        },
                        new
                        {
                            Id = 11,
                            CourseId = 6,
                            Name = "Python - 1",
                            NumberOfSessions = 10,
                            TeacherId = 4,
                            Total = 0
                        },
                        new
                        {
                            Id = 12,
                            CourseId = 6,
                            Name = "Python - 2",
                            NumberOfSessions = 10,
                            TeacherId = 4,
                            Total = 0
                        },
                        new
                        {
                            Id = 13,
                            CourseId = 7,
                            Name = "React Native - 1",
                            NumberOfSessions = 10,
                            TeacherId = 2,
                            Total = 0
                        },
                        new
                        {
                            Id = 14,
                            CourseId = 7,
                            Name = "React Native - 2",
                            NumberOfSessions = 10,
                            TeacherId = 2,
                            Total = 0
                        },
                        new
                        {
                            Id = 15,
                            CourseId = 8,
                            Name = "Golang - 1",
                            NumberOfSessions = 10,
                            TeacherId = 3,
                            Total = 0
                        },
                        new
                        {
                            Id = 16,
                            CourseId = 8,
                            Name = "Golang - 2",
                            NumberOfSessions = 10,
                            TeacherId = 3,
                            Total = 0
                        },
                        new
                        {
                            Id = 17,
                            CourseId = 9,
                            Name = "VueJS - 1",
                            NumberOfSessions = 10,
                            TeacherId = 4,
                            Total = 0
                        },
                        new
                        {
                            Id = 18,
                            CourseId = 9,
                            Name = "VueJS - 2",
                            NumberOfSessions = 10,
                            TeacherId = 4,
                            Total = 0
                        },
                        new
                        {
                            Id = 19,
                            CourseId = 10,
                            Name = "Angular - 1",
                            NumberOfSessions = 10,
                            TeacherId = 2,
                            Total = 0
                        },
                        new
                        {
                            Id = 20,
                            CourseId = 10,
                            Name = "Angular - 2",
                            NumberOfSessions = 10,
                            TeacherId = 2,
                            Total = 0
                        },
                        new
                        {
                            Id = 21,
                            CourseId = 11,
                            Name = "Flutter - 1",
                            NumberOfSessions = 10,
                            TeacherId = 3,
                            Total = 0
                        },
                        new
                        {
                            Id = 22,
                            CourseId = 11,
                            Name = "Flutter - 1",
                            NumberOfSessions = 10,
                            TeacherId = 3,
                            Total = 0
                        },
                        new
                        {
                            Id = 23,
                            CourseId = 12,
                            Name = "Java - 1",
                            NumberOfSessions = 10,
                            TeacherId = 4,
                            Total = 0
                        },
                        new
                        {
                            Id = 24,
                            CourseId = 12,
                            Name = "Java - 2",
                            NumberOfSessions = 10,
                            TeacherId = 4,
                            Total = 0
                        },
                        new
                        {
                            Id = 25,
                            CourseId = 13,
                            Name = "C++ - 1",
                            NumberOfSessions = 10,
                            TeacherId = 2,
                            Total = 0
                        },
                        new
                        {
                            Id = 26,
                            CourseId = 13,
                            Name = "C++ - 2",
                            NumberOfSessions = 10,
                            TeacherId = 2,
                            Total = 0
                        },
                        new
                        {
                            Id = 27,
                            CourseId = 14,
                            Name = "C - 1",
                            NumberOfSessions = 10,
                            TeacherId = 3,
                            Total = 0
                        },
                        new
                        {
                            Id = 28,
                            CourseId = 14,
                            Name = "C - 2",
                            NumberOfSessions = 10,
                            TeacherId = 3,
                            Total = 0
                        },
                        new
                        {
                            Id = 29,
                            CourseId = 15,
                            Name = "C# - 1",
                            NumberOfSessions = 10,
                            TeacherId = 4,
                            Total = 0
                        },
                        new
                        {
                            Id = 30,
                            CourseId = 15,
                            Name = "C# - 2",
                            NumberOfSessions = 10,
                            TeacherId = 4,
                            Total = 0
                        });
                });

            modelBuilder.Entity("cnpmnc.backend.Models.Literacy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Literacies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "THPT"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Đại học"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Thạc sĩ"
                        });
                });

            modelBuilder.Entity("cnpmnc.backend.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<int>("SchoolShiftId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("GradeId");

                    b.HasIndex("SchoolShiftId");

                    b.ToTable("Schedules", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassroomId = 1,
                            GradeId = 1,
                            SchoolShiftId = 1
                        });
                });

            modelBuilder.Entity("cnpmnc.backend.Models.SchoolShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("SchoolShifts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndTime = new TimeSpan(0, 9, 15, 0, 0),
                            Name = "Ca 1",
                            StartTime = new TimeSpan(0, 6, 45, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            Name = "Ca 2",
                            StartTime = new TimeSpan(0, 9, 30, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            EndTime = new TimeSpan(0, 12, 15, 0, 0),
                            Name = "Ca 3",
                            StartTime = new TimeSpan(0, 12, 45, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            Name = "Ca 4",
                            StartTime = new TimeSpan(0, 15, 30, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            EndTime = new TimeSpan(0, 21, 45, 0, 0),
                            Name = "Ca 5",
                            StartTime = new TimeSpan(0, 18, 15, 0, 0)
                        });
                });

            modelBuilder.Entity("cnpmnc.backend.Models.Account", b =>
                {
                    b.HasOne("cnpmnc.backend.Models.Literacy", "Literacy")
                        .WithMany()
                        .HasForeignKey("LiteracyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Literacy");
                });

            modelBuilder.Entity("cnpmnc.backend.Models.Certificate", b =>
                {
                    b.HasOne("cnpmnc.backend.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("cnpmnc.backend.Models.Grade", b =>
                {
                    b.HasOne("cnpmnc.backend.Models.Course", "Course")
                        .WithMany("Grades")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cnpmnc.backend.Models.Account", "Teacher")
                        .WithMany("Grades")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("cnpmnc.backend.Models.Schedule", b =>
                {
                    b.HasOne("cnpmnc.backend.Models.Classroom", "Classroom")
                        .WithMany("Schedules")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cnpmnc.backend.Models.Grade", "Grade")
                        .WithMany("Schedules")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cnpmnc.backend.Models.SchoolShift", "SchoolShift")
                        .WithMany("Schedules")
                        .HasForeignKey("SchoolShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Grade");

                    b.Navigation("SchoolShift");
                });

            modelBuilder.Entity("cnpmnc.backend.Models.Account", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("cnpmnc.backend.Models.Classroom", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("cnpmnc.backend.Models.Course", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("cnpmnc.backend.Models.Grade", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("cnpmnc.backend.Models.SchoolShift", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
